import graphene
from graphene import relay
from ddd.order_management.application import (
    message_bus, commands, unit_of_work, queries
  )
from order_management.graphql import object_types, input_types, common

# ==========================
# Mutations 
# ===================
class PlaceOrderMutation(common.BaseMutation):
    class Input:
        order_id = graphene.String()

    command_class = commands.PlaceOrderCommand
    success_message = "Order successfully placed."
    exception_message = "Unexpected error during place order"


# ======
# expected to call in front end via Paypal onApprove ?
# expected to createOrder via paypal.Buttons and make sure to include amount custom_id (internal order_id) 
# ===========

class ConfirmOrderMutation(common.BaseMutation):
    class Input:
        order_id = graphene.String(required=True) #our own order id
        transaction_id = graphene.String(required=True) #paypal autogenerated order id
        payment_method = graphene.String(required=True)

    command_class = commands.ConfirmOrderCommand
    success_message = "Order successfully confirmed."
    exception_message = "Unexpected error during order confirmation"


class SelectShippingOptionMutation(common.BaseMutation):
    class Input:
        order_id = graphene.String(required=True)
        shipping_details = graphene.Field(input_types.ShippingDetailsInput, required=True)

    command_class = commands.SelectShippingOptionCommand
    success_message = "Order successfully selected shipping option."
    exception_message = "Unexpected error during shipping option selection"


class CheckoutItemsMutation(common.BaseMutation):
    class Input:
        customer_details = graphene.Field(input_types.CustomerDetailsInput, required=True)
        shipping_address = graphene.Field(input_types.AddressInput, required=True)
        line_items = graphene.List(input_types.LineItemInput, required=True)

    command_class = commands.CheckoutItemsCommand
    success_message = "Cart items successfully checkout."
    exception_message = "Unexpected error during cart items checkout"

# ===========
# Query resolvere here
# ==========
class Query(graphene.ObjectType):

    #shipping_options = graphene.List(ShippingDetailsType)
    shipping_options_by_order_id = graphene.List(input_types.ShippingDetailsType, order_id=graphene.String(required=True))
    def resolve_shipping_options_by_order_id(root, info, order_id):
        query = queries.ShippingOptionsQuery(order_id=order_id)
        shipping_options = message_bus.handle(query, unit_of_work.DjangoOrderUnitOfWork())
        response_dto = common.get_shipping_options_response_dto(shipping_options)

        return response_dto






