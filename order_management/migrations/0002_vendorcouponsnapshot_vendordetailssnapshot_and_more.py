# Generated by Django 5.1.4 on 2025-06-08 13:36

import ddd.order_management.domain.enums
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('order_management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='VendorCouponSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon_code', models.CharField(help_text='e.g WELCOME25', max_length=50)),
                ('start_date', models.DateTimeField(help_text='Only valid on start of this date')),
                ('end_date', models.DateTimeField(help_text='Only valid on before end date')),
                ('is_active', models.BooleanField(default=False, help_text='To quickly control whether this offer is still valid')),
                ('last_update_dt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='VendorDetailsSnapshot',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('country', models.CharField(help_text='Can use to determine if the order is domestic compared w destination', max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text='To quickly control whether the is valid')),
                ('last_update_dt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerDetailsSnapshot',
            fields=[
                ('customer_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('last_update_dt', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer_details_snapshot', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VendorOfferSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('offer_type', models.CharField(choices=ddd.order_management.domain.enums.OfferType.choices, max_length=50)),
                ('discount_value', models.DecimalField(decimal_places=2, default=Decimal('0.0'), help_text='Percentage or Fix amount?', max_digits=15)),
                ('conditions', models.CharField(help_text='ex. min_purchase, applicable_products', max_length=150)),
                ('stackable', models.BooleanField(default=False, help_text='Set to True, To combine w other stackable')),
                ('priority', models.PositiveIntegerField(default=0, help_text='The highest number will be prioritized on multistack or single stack')),
                ('required_coupon', models.BooleanField(default=False, help_text='Set to True, To make use of coupons to apply')),
                ('start_date', models.DateTimeField(blank=True, help_text='Only valid on start of this date; To ignore if required_coupon is True', null=True)),
                ('end_date', models.DateTimeField(blank=True, help_text='Only valid on before end date; To ignore if required_coupon is True', null=True)),
                ('is_active', models.BooleanField(default=False, help_text='To quickly control whether this offer is still valid')),
                ('last_update_dt', models.DateTimeField(auto_now=True)),
                ('coupon', models.ManyToManyField(blank=True, help_text='Provide a coupons to manually apply for this offer.', to='order_management.vendorcouponsnapshot')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_offers_snapshot', to='order_management.vendordetailssnapshot')),
            ],
        ),
        migrations.CreateModel(
            name='VendorShippingOptionSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='ex. Standard', max_length=255)),
                ('base_cost', models.DecimalField(decimal_places=2, default=Decimal('0.0'), max_digits=15)),
                ('currency', models.CharField(default='SGD', help_text='Default currency specific to this Shipping option base cost or flat rate', max_length=50)),
                ('conditions', models.CharField(help_text='ex. { "max_weight": 30 }', max_length=150)),
                ('flat_rate', models.DecimalField(decimal_places=2, default=Decimal('0.0'), max_digits=15)),
                ('delivery_time', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=False, help_text='To quickly control whether this option is still valid')),
                ('last_update_dt', models.DateTimeField(auto_now=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendor_shipping_options_snapshot', to='order_management.vendordetailssnapshot')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerAddressSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_type', models.CharField(choices=[('billing', 'Billing'), ('shipping', 'Shipping')], max_length=10)),
                ('street', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=10, null=True)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=100)),
                ('is_default', models.BooleanField(default=False)),
                ('last_update_dt', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_address_snapshot', to='order_management.customerdetailssnapshot')),
            ],
            options={
                'unique_together': {('customer', 'address_type', 'is_default')},
            },
        ),
    ]
