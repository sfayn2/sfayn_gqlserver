# Generated by Django 5.1.4 on 2025-01-10 15:45

import ddd.order_management.domain.enums
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.CharField(help_text='ORD-1234', max_length=100, primary_key=True, serialize=False)),
                ('order_status', models.CharField(blank=True, choices=ddd.order_management.domain.enums.OrderStatus.choices, default=ddd.order_management.domain.enums.OrderStatus['DRAFT'], max_length=25, null=True)),
                ('cancellation_reason', models.CharField(blank=True, help_text='both entity like vendor or customer can cancel the order?', max_length=255, null=True)),
                ('customer_first_name', models.CharField(max_length=255)),
                ('customer_last_name', models.CharField(max_length=255)),
                ('customer_email', models.EmailField(blank=True, max_length=255, null=True)),
                ('customer_coupons', models.JSONField(blank=True, help_text="e.g. ['WELCOME25', 'FREESHIP']", null=True)),
                ('delivery_address', models.TextField(blank=True, help_text='Delivery address')),
                ('delivery_city', models.CharField(blank=True, help_text='Optional for other countries (e.g. Singapore)', max_length=50, null=True)),
                ('delivery_postal', models.CharField(blank=True, help_text='some countries dont use this (e.g Ireland?)', max_length=50, null=True)),
                ('delivery_country', models.CharField(max_length=50)),
                ('delivery_state', models.CharField(blank=True, help_text='Mandatory in countries like US, Canada, India but irrelevant in small countries', max_length=10, null=True)),
                ('shipping_method', models.CharField(blank=True, choices=ddd.order_management.domain.enums.ShippingMethod.choices, help_text='i.e. Free Shipping, Local Pickup', max_length=50, null=True)),
                ('shipping_delivery_time', models.CharField(blank=True, help_text='i.e. 2-3 days delivery', max_length=150, null=True)),
                ('shipping_cost', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('shipping_tracking_reference', models.CharField(blank=True, max_length=50, null=True)),
                ('tax_details', models.JSONField(blank=True, help_text='e.g. ["GST (9%)", "Local State (2%)"]', null=True)),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=3, help_text='tax amount', max_digits=15, null=True)),
                ('total_discounts_fee', models.DecimalField(blank=True, decimal_places=3, help_text='total discounts fee per order', max_digits=15, null=True)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=3, help_text='overall total', max_digits=15, null=True)),
                ('offer_details', models.JSONField(blank=True, help_text='e.g. ["Free Shipping applied", "Discount applied: $20.00"]', null=True)),
                ('final_amount', models.DecimalField(blank=True, decimal_places=3, help_text='overall total - discounts + ship cost + tax, etc. ?', max_digits=15, null=True)),
                ('payment_method', models.CharField(blank=True, choices=ddd.order_management.domain.enums.PaymentMethod.choices, max_length=50, null=True)),
                ('payment_reference', models.CharField(blank=True, help_text='payment transaction id', max_length=25, null=True)),
                ('payment_amount', models.DecimalField(blank=True, decimal_places=3, help_text='amount paid by customer', max_digits=15, null=True)),
                ('currency', models.CharField(default='SGD', help_text='Currency for calculation requirements & validation. e.g. SGD', max_length=100)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrderLine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('product_sku', models.CharField(max_length=50)),
                ('product_name', models.CharField(max_length=255)),
                ('product_category', models.CharField(help_text='some countries uses category to calculate tax', max_length=100)),
                ('is_free_gift', models.BooleanField(default=False)),
                ('is_taxable', models.BooleanField(default=True)),
                ('options', models.JSONField(help_text='ex. {"Size": "M", "Color": "RED"}')),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order_quantity', models.PositiveIntegerField(null=True)),
                ('package_weight', models.CharField(blank=True, help_text='value should be coming from product itself or to fill in later once it goes to warehouse fulfillment?', max_length=100, null=True)),
                ('package_length', models.CharField(blank=True, help_text='value should be coming from product itself or to fill in later once it goes to warehouse fulfillment? ', max_length=100, null=True)),
                ('package_width', models.CharField(blank=True, help_text='value should be coming from product itself or to fill in later once it goes to warehouse fulfillment?', max_length=100, null=True)),
                ('package_height', models.CharField(blank=True, help_text='value should be coming from product itself or to fill in later once it goes to warehouse fulfillment?', max_length=100, null=True)),
                ('total_price', models.DecimalField(blank=True, decimal_places=3, help_text='Total price w/o discounts; to apply discount per Order', max_digits=15, null=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='order_management.order')),
            ],
        ),
    ]
