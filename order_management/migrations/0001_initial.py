# Generated by Django 5.2.6 on 2025-10-31 14:17

import ddd.order_management.domain.enums
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.CharField(help_text='ORD-1234', max_length=100, primary_key=True, serialize=False)),
                ('tenant_id', models.CharField(max_length=150)),
                ('checkout_session', models.CharField(blank=True, help_text='{app}-{identifier} . eg. checkoutapp-1234', max_length=100, null=True)),
                ('order_status', models.CharField(blank=True, choices=ddd.order_management.domain.enums.OrderStatus.choices, default=ddd.order_management.domain.enums.OrderStatus['DRAFT'], max_length=25, null=True)),
                ('customer_id', models.CharField(blank=True, max_length=150, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_email', models.EmailField(blank=True, max_length=255, null=True)),
                ('payment_status', models.CharField(blank=True, choices=ddd.order_management.domain.enums.PaymentStatus.choices, max_length=50, null=True)),
                ('currency', models.CharField(help_text='Currency for calculation requirements & validation. e.g. SGD', max_length=50)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SaaSConfig',
            fields=[
                ('tenant_id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('configs', models.TextField(help_text='ex. { "plan": ["standard"] }')),
                ('last_update_dt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TenantConfig',
            fields=[
                ('tenant_id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('configs', models.TextField(help_text='ex. { "restocking_fee_percent": 20 }')),
                ('last_update_dt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=25)),
                ('action', models.CharField(help_text='should match w permission ?', max_length=50)),
                ('performed_by', models.CharField(help_text='system or user or reviewer or other', max_length=50)),
                ('user_input', models.CharField(help_text='{"comment": "Looks good"}', max_length=500)),
                ('executed_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='LineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_sku', models.CharField(max_length=50)),
                ('product_name', models.CharField(max_length=255)),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order_quantity', models.PositiveIntegerField(null=True)),
                ('vendor_id', models.CharField(help_text='can use to check if product belongs to same vendor', max_length=200)),
                ('pickup_address_line1', models.TextField(blank=True, help_text='Warehouse/Vendor address', null=True)),
                ('pickup_address_line2', models.TextField(blank=True, help_text='Warehouse/Vendor address2', null=True)),
                ('pickup_address_city', models.CharField(blank=True, help_text='Optional for other countries (e.g. Singapore)', max_length=50, null=True)),
                ('pickup_address_postal', models.CharField(blank=True, help_text='some countries dont use this (e.g Ireland?)', max_length=50, null=True)),
                ('pickup_address_country', models.CharField(max_length=50)),
                ('pickup_address_state', models.CharField(blank=True, help_text='Mandatory in countries like US, Canada, India but irrelevant in small countries', max_length=10, null=True)),
                ('package_weight', models.CharField(blank=True, help_text='value should be coming from product itself or to fill in later once it goes to warehouse fulfillment?', max_length=100, null=True)),
                ('package_length', models.CharField(blank=True, help_text='value should be coming from product itself or to fill in later once it goes to warehouse fulfillment? ', max_length=100, null=True)),
                ('package_width', models.CharField(blank=True, help_text='value should be coming from product itself or to fill in later once it goes to warehouse fulfillment?', max_length=100, null=True)),
                ('package_height', models.CharField(blank=True, help_text='value should be coming from product itself or to fill in later once it goes to warehouse fulfillment?', max_length=100, null=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='order_management.order')),
            ],
            options={
                'unique_together': {('product_sku', 'order')},
            },
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('shipment_id', models.CharField(help_text='SH-xxx', max_length=100, primary_key=True, serialize=False)),
                ('shipment_address_line1', models.TextField(blank=True, help_text='Warehouse/Vendor address', null=True)),
                ('shipment_address_line2', models.TextField(blank=True, help_text='Warehouse/Vendor address2', null=True)),
                ('shipment_address_city', models.CharField(blank=True, help_text='Optional for other countries (e.g. Singapore)', max_length=50, null=True)),
                ('shipment_address_postal', models.CharField(blank=True, help_text='some countries dont use this (e.g Ireland?)', max_length=50, null=True)),
                ('shipment_address_country', models.CharField(blank=True, max_length=50, null=True)),
                ('shipment_address_state', models.CharField(blank=True, help_text='Mandatory in countries like US, Canada, India but irrelevant in small countries', max_length=10, null=True)),
                ('shipment_provider', models.CharField(blank=True, max_length=25, null=True)),
                ('shipment_service_code', models.CharField(blank=True, max_length=25, null=True)),
                ('tracking_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('shipment_amount', models.DecimalField(blank=True, decimal_places=2, help_text='shipping amount', max_digits=15, null=True)),
                ('shipment_tax_amount', models.DecimalField(blank=True, decimal_places=2, help_text='shipping tax amount', max_digits=15, null=True)),
                ('shipment_currency', models.CharField(blank=True, max_length=25, null=True)),
                ('shipment_status', models.CharField(blank=True, choices=ddd.order_management.domain.enums.ShipmentStatus.choices, default=ddd.order_management.domain.enums.ShipmentStatus['PENDING'], max_length=25, null=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shipments', to='order_management.order')),
            ],
        ),
        migrations.CreateModel(
            name='ShipmentItem',
            fields=[
                ('shipment_item_id', models.CharField(help_text='SHI-xxx', max_length=100, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(null=True)),
                ('allocated_shipping_tax', models.DecimalField(blank=True, decimal_places=2, help_text='allocated shipping tax amount', max_digits=15, null=True)),
                ('allocated_shipping_tax_currency', models.CharField(blank=True, max_length=25, null=True)),
                ('line_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shipment_allocations', to='order_management.lineitem')),
                ('shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipment_items', to='order_management.shipment')),
            ],
        ),
        migrations.CreateModel(
            name='UserAuthorizationSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.CharField(max_length=150)),
                ('permission_codename', models.CharField(max_length=255)),
                ('scope', models.CharField(help_text='ex. { "role": "vendor" }', max_length=150)),
                ('is_active', models.BooleanField(default=True)),
                ('last_update_dt', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('tenant_id', 'permission_codename', 'scope')},
            },
        ),
    ]
