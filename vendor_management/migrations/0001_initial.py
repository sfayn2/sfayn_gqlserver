# Generated by Django 5.1.4 on 2025-03-30 14:15

import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon_code', models.CharField(help_text='e.g WELCOME25', max_length=50)),
                ('start_date', models.DateTimeField(help_text='Only valid on start of this date')),
                ('end_date', models.DateTimeField(help_text='Only valid on before end date')),
                ('is_active', models.BooleanField(default=False, help_text='To quickly control whether this offer is still valid')),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('name', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('country', models.CharField(help_text='Can use to determine if the order is domestic compared w destination', max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text='To quickly control whether the is valid')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShippingOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='ex. Standard', max_length=255)),
                ('base_cost', models.DecimalField(decimal_places=2, default=Decimal('0.0'), max_digits=15)),
                ('conditions', models.CharField(help_text='ex. { "weight_kg_lt": 30 }', max_length=150)),
                ('flat_rate', models.DecimalField(decimal_places=2, default=Decimal('0.0'), max_digits=15)),
                ('delivery_time', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=False, help_text='To quickly control whether this option is still valid')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_options', to='vendor_management.vendor')),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('offer_type', models.CharField(choices=[('percentage_discount', 'Percentage Discount'), ('fixed_discount', 'Fixed Discount'), ('coupon_discount', 'Coupon Percentage Discount'), ('bundle', 'Bundle'), ('free_gift', 'Free Gift'), ('free_shipping', 'Free Shipping')], max_length=50)),
                ('discount_value', models.DecimalField(decimal_places=2, default=Decimal('0.0'), help_text='Percentage or Fix amount?', max_digits=15)),
                ('conditions', models.CharField(help_text='ex. min_purchase, applicable_products', max_length=150)),
                ('stackable', models.BooleanField(default=False, help_text='Set to True, To combine w other stackable')),
                ('priority', models.PositiveIntegerField(default=0, help_text='The highest number will be prioritized on multistack or single stack')),
                ('required_coupon', models.BooleanField(default=False, help_text='Set to True, To make use of coupons to apply')),
                ('start_date', models.DateTimeField(blank=True, help_text='Only valid on start of this date; To ignore if required_coupon is True', null=True)),
                ('end_date', models.DateTimeField(blank=True, help_text='Only valid on before end date; To ignore if required_coupon is True', null=True)),
                ('is_active', models.BooleanField(default=False, help_text='To quickly control whether this offer is still valid')),
                ('coupon', models.ManyToManyField(blank=True, help_text='Provide a coupons to manually apply for this offer.', to='vendor_management.coupon')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='vendor_management.vendor')),
            ],
        ),
    ]
