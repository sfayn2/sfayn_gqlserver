# Generated by Django 4.2 on 2023-04-28 14:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import utils.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('product', '0001_initial'),
        ('tax', '0001_initial'),
        ('payment', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_method_name', models.CharField(blank=True, max_length=50, null=True)),
                ('shipping_method_id', models.IntegerField(blank=True, null=True)),
                ('shipping_title', models.CharField(blank=True, help_text='ex. Free shipping, Local pickup', max_length=50, null=True)),
                ('shipping_desc', models.CharField(blank=True, max_length=150, null=True)),
                ('shipping_cost', models.FloatField(blank=True, help_text='cost or overall cost?', null=True)),
                ('shipping_address', models.TextField(blank=True)),
                ('shipping_postal', models.CharField(max_length=50)),
                ('shipping_country', models.CharField(max_length=50)),
                ('shipping_region', models.CharField(max_length=50)),
                ('tax_name', models.CharField(help_text='GST, VAT, ?', max_length=20)),
                ('tax_country', models.CharField(max_length=50)),
                ('subtotal', models.FloatField(blank=True, help_text='total items without order discounts and tax', null=True)),
                ('discounts', models.FloatField(blank=True, help_text='total discounts fee per order', null=True)),
                ('discounted_subtotal', models.FloatField(blank=True, help_text='discounted subtotal', null=True)),
                ('tax_rate', models.FloatField(blank=True, help_text='N% tax rate per order?', null=True, verbose_name='Rate(%)')),
                ('total_tax', models.FloatField(blank=True, help_text='tax amount', null=True)),
                ('shipping', models.FloatField(blank=True, help_text='shipping fee', null=True)),
                ('total', models.FloatField(blank=True, help_text='overall total', null=True)),
                ('currency', models.TextField(blank=True, help_text='USD')),
                ('amount_paid', models.FloatField(blank=True, help_text='amount paid by customer', null=True)),
                ('customer_note', models.TextField(blank=True, help_text='Customer notes to seller')),
                ('tracking_number', models.CharField(blank=True, help_text='fulfillment tracking number', max_length=120, null=True)),
                ('status', models.IntegerField(blank=True, choices=[(0, 'Waiting For Payment'), (1, 'Paid'), (2, 'Processing'), (3, 'Shipped Out'), (4, 'Refunded'), (5, 'Cancel'), (6, 'Completed')], null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user2order', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer2order', to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment2order', to='payment.paymentmethod')),
                ('tax', models.ForeignKey(blank=True, help_text='Country tax applied', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tax2order', to='tax.tax')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order_quantity', models.IntegerField(null=True)),
                ('product_sn', models.CharField(blank=True, max_length=25, null=True)),
                ('product_price', models.FloatField(blank=True, help_text='undiscounted price', null=True)),
                ('product_options', models.CharField(blank=True, max_length=50, null=True)),
                ('product_variant_name', models.CharField(blank=True, max_length=50, null=True)),
                ('product_img_upload', models.ImageField(blank=True, help_text='Primary img', null=True, upload_to=utils.utils.path_and_rename)),
                ('product_img_url', models.CharField(blank=True, help_text='secondary img', max_length=300, null=True)),
                ('discounts', models.FloatField(blank=True, help_text='discounts per item', null=True)),
                ('discounted_price', models.FloatField(blank=True, help_text='(product_price*order_quantity)-discounts_fee ', null=True)),
                ('total', models.FloatField(blank=True, help_text='it can be the discounted price or product original price?', null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user2orderitem', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order2orderitem', to='order.order')),
                ('product_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prodvariant2orderitem', to='product.variantitem')),
            ],
        ),
    ]
