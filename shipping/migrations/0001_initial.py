# Generated by Django 4.2 on 2023-05-14 13:29

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('provider', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='ex. Heavy Weight', max_length=50)),
                ('desc', models.CharField(max_length=150)),
                ('min_weight', models.FloatField(blank=True, help_text='minimum weight of the individual item or all ordered items??', null=True)),
                ('max_weight', models.FloatField(blank=True, help_text='max weight of the individual item or all ordered items??', null=True)),
                ('min_dimension', models.FloatField(blank=True, help_text='min package dimension', null=True)),
                ('max_dimension', models.FloatField(blank=True, help_text='max package dimension, should per ordered items??', null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=3, default=Decimal('0.0'), help_text='cost based on weight limit or dimension limit', max_digits=15, null=True)),
                ('class_type', models.IntegerField(choices=[(0, 'Entire Order'), (1, 'Per Item')], help_text='apply per order or per item?', null=True)),
                ('priority', models.IntegerField(blank=True, help_text='multiple classification need to have a priority', null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user2classification', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='ex. Free shipping, Local pickup', max_length=50)),
                ('note', models.CharField(blank=True, help_text='ex. 2-5 days delivery', max_length=150, null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=3, default=Decimal('0.0'), help_text='ship method cost', max_digits=15, null=True)),
                ('is_enable', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('classification', models.ManyToManyField(blank=True, related_name='class2shipmethod', to='shipping.classification')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user2method', to=settings.AUTH_USER_MODEL)),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provider2method', to='provider.provider')),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='ex. Zone 1', max_length=50)),
                ('country', models.CharField(help_text='ex. Singapore', max_length=50)),
                ('region', models.CharField(help_text='ex. Tampines', max_length=50)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user2zone', to=settings.AUTH_USER_MODEL)),
                ('shipping_method', models.ManyToManyField(blank=True, related_name='shipmethod2zone', to='shipping.method')),
            ],
        ),
    ]
